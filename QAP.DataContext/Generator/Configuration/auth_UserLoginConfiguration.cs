// <auto-generated>
// ReSharper disable All

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace QAP.DataContext
{
    // UserLogin
    public class auth_UserLoginConfiguration : IEntityTypeConfiguration<auth_UserLogin>
    {
        public void Configure(EntityTypeBuilder<auth_UserLogin> builder)
        {
            builder.ToTable("UserLogin", "auth");
            builder.HasKey(x => x.Id).HasName("PK_UserLoginId");

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.UserId).HasColumnName(@"UserId").HasColumnType("int").IsRequired();
            builder.Property(x => x.Token).HasColumnName(@"Token").HasColumnType("text(2147483647)").IsRequired().IsUnicode(false).HasMaxLength(2147483647);
            builder.Property(x => x.UserAgent).HasColumnName(@"UserAgent").HasColumnType("text(2147483647)").IsRequired().IsUnicode(false).HasMaxLength(2147483647);
            builder.Property(x => x.ValidUntil).HasColumnName(@"ValidUntil").HasColumnType("datetime").IsRequired();
            builder.Property(x => x.Enabled).HasColumnName(@"Enabled").HasColumnType("bit").IsRequired();
            builder.Property(x => x.Timestamp).HasColumnName(@"Timestamp").HasColumnType("datetime").IsRequired();

            // Foreign keys
            builder.HasOne(a => a.auth_User).WithMany(b => b.auth_UserLogins).HasForeignKey(c => c.UserId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_UserLogin_User");
        }
    }

}
// </auto-generated>
