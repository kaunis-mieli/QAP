// <auto-generated>
// ReSharper disable All

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace QAP.DataContext
{
    // SessionAlgorithm
    public class SessionAlgorithmConfiguration : IEntityTypeConfiguration<SessionAlgorithm>
    {
        public void Configure(EntityTypeBuilder<SessionAlgorithm> builder)
        {
            builder.ToTable("SessionAlgorithm", "dbo");
            builder.HasKey(x => x.Id).HasName("PK_SessionAlgorithmId");

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.SessionId).HasColumnName(@"SessionId").HasColumnType("int").IsRequired();
            builder.Property(x => x.AlgorithmId).HasColumnName(@"AlgorithmId").HasColumnType("smallint").IsRequired();
            builder.Property(x => x.Info).HasColumnName(@"Info").HasColumnType("ntext").IsRequired(false);
            builder.Property(x => x.CreatedAt).HasColumnName(@"CreatedAt").HasColumnType("datetime").IsRequired();

            // Foreign keys
            builder.HasOne(a => a.const_Algorithm).WithMany(b => b.SessionAlgorithms).HasForeignKey(c => c.AlgorithmId).HasConstraintName("FK_SessionAlgorithm_Algorithm");
            builder.HasOne(a => a.Session).WithMany(b => b.SessionAlgorithms).HasForeignKey(c => c.SessionId).HasConstraintName("FK_SessionAlgorithm_Session");
        }
    }

}
// </auto-generated>
