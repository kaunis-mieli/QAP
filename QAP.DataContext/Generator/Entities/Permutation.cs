// <auto-generated>
// ReSharper disable All

using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;

namespace QAP.DataContext
{
    // Permutation
    public class Permutation
    {
        public long Id { get; set; } // Id (Primary key)
        public long Cost { get; set; } // Cost
        public byte[] Value { get; set; } // Value
        public int SessionAlgorithmVersionId { get; set; } // SessionAlgorithmVersionId
        public int Iteration { get; set; } // Iteration
        public int? Member { get; set; } // Member
        public DateTime Timestamp { get; set; } // Timestamp

        // Reverse navigation

        /// <summary>
        /// Child Problems where [Problem].[PermutationId] point to this entity (FK_Problem_Permutation)
        /// </summary>
        public virtual ICollection<Problem> Problems { get; set; } // Problem.FK_Problem_Permutation

        /// <summary>
        /// Child SessionAlgorithmVersions where [SessionAlgorithmVersion].[PermutationId] point to this entity (FK_SessionAlgorithmVersion_Permutation)
        /// </summary>
        public virtual ICollection<SessionAlgorithmVersion> SessionAlgorithmVersions { get; set; } // SessionAlgorithmVersion.FK_SessionAlgorithmVersion_Permutation

        // Foreign keys

        /// <summary>
        /// Parent SessionAlgorithmVersion pointed by [Permutation].([SessionAlgorithmVersionId]) (FK_Permutation_SessionAlgorithmVersion)
        /// </summary>
        public virtual SessionAlgorithmVersion SessionAlgorithmVersion { get; set; } // FK_Permutation_SessionAlgorithmVersion

        public Permutation()
        {
            Timestamp = DateTime.Now;
            Problems = new List<Problem>();
            SessionAlgorithmVersions = new List<SessionAlgorithmVersion>();
        }
    }

}
// </auto-generated>
